


python  django学的很迷茫怎么办？ - 学习 - 知乎






--------------------Link http://www.zhihu.com/question/26235428 ----------------------





--------------------Detail----------------------

本人学生，零编程基础，在学习python的过程中越学越迷茫，感觉像无头苍蝇一样，来知乎取经，下面进入正题吧：        我是先看了中谷的python教学视频，然后跟着慕课网上的python教程把题目做了一遍，然后就开始看django，看了“django web开发指南”，又看“django官方文档”，在看django这两本书的时候简直是一头雾水，我有种感觉是python基础没学好的原因所以理解不了django，实在不知道在说什么，就照着书上的例子练，同时我也在网上找了好多blog应用的实例，想试着自己写一个blog网站，来增加一下对django的认识，才发现前端也需要学习，然后就在w3c上学基本的前端，发现前端要学一大堆，然后学着学着就迷茫了，最近一直很迷茫不知道自己该干什么，下一步该干什么，实在不想像无头苍蝇一样。那么问题来了：1.请问下一步我该干什么了？（我真的是不知道该往那个方向？阶段？）2.在实际工作中，python工程师工作到底是做哪一块的？（尽可能的详细点）3.如果从事django开发，还需要哪些技能？要学前端么？4.如果想去实习需要达到什么水平？已经迷茫几天了，知道知乎上大神很多，希望前辈能指点指点，小弟不胜感激。。。

-------------------------answer 0 via  -------------------------


很多程序员，在学习一门新技术的时候，都会陷入像题主你这样迷茫的状态。我也一样。而且不止陷入一次两次。比如学习新的框架的时候，学习新的语言的时候，学习移动开发的时候。这事儿多了以后，我就在想。不对，肯定有哪里不对，看着StackOverflow也好，Github也好，上面那么多的高手，回答各种问题。而很多人居然还是在校的学生。我有种感觉，这肯定是我的方法出了问题，肯定是在某个很深很深的根源上出了问题。大家都是人，一天三餐吃喝拉撒，学生虽然自由时间多一些，但是我们毕竟也干了这么多年的程序员。新东西每天都在往出冒，不可能有人能那么快得全部掌握。而现实是确实出一种新技术，瞬间一堆高手就冒了出来。这事儿，有问题。于是我就开始找问题的根源。其实这事儿没这么复杂，只要静下心来，不要看到一个新技术就急慌慌的去学，很快就能反映过来。根源其实就是两点：1. 计算机技术的底层原理从来没有变过。2. 任何一门新技术都是人为写成的。这是我在迷茫了N次后，静下心来，制造出的自己在技术海洋上的指南针。对不对好不好不敢说，大家批判这看吧。在学习任何一门新技术新框架新语言时，我会先把这两条引用到整个学习过程中去。1. 计算机的底层原理从来没有变过。网络需要通讯原理，编程需要数据结构与算法。一个列表的排序不管你是JAVA是C是PYTHON，哪怕你调用的函数名字千差万别，最后的算法其实疏通同归。你大可不去查文档自己写一个出来。一个一个网页上得表单，不管哪个框架哪个语言哪个MVC，最后都要归于一个HTTP的POST，最后都要连接上数据库，写进去存起来。这就是原理不变。你要先把这个道理时时刻刻的记在心里。当遇到看不懂的东西，迷茫的时候，去想想这个函数到底做了什么，然后从那个不变得原理反推回来，大部分时候你会发现很多新技术不过是早已有的技术的重组与包装而已。2. 任何一门新技术都是人为写成的。这里的新技术主要指的是目前百花齐放的各种框架啊库啊类啊语言啊一类的。一开始我也很很多人一样，觉得哇好牛好酷好高大上。但是慢慢的，我有一种被欺骗的感觉，这种感觉类似于某类产品持续的营销，今天我们有这个口味，明天我们有哪个口味。区别只是一个加了蜂蜜一个没加。因此在总结了第一个‘原理不变‘之后，很自然的我推出了第二个’人为写成‘。意思是不管看起来多么新潮，多么高大上的语言，它首先要遵循第一条原理不变的道理。而如果在使用它的过程中，发现了某些有违第一条的感觉函数，方法，逻辑。那么百分之百这个函数方法逻辑只是做了人为的包装而已。去看文档，不要纠结为什么，作者当时可能脑袋进水，不要跟着他一起跳坑。简单说，什么Django, Flask, Web.py，CSS, HTML5, ...别被那些炫名词的给洗脑了。原理原理原理，本质本质本质！不要诚惶诚恐，就当它是烂泥巴搓圆弄扁踩两脚，抱着这种心态来学才对。简单解释了一下我草草归纳的两条规律。回到答主的问题上来。你的第一个问题是我该干什么？很简单，做第一个网站，做第二个网站，做第三个网站。做网站做吐了就去做做手机APP，做的无聊的就去玩玩爬虫。记得把你所有写得东西都扔到GITHUB上去，每天在SO上答问题问问题。就这样。不要做到完美。记小时候玩泥巴么？就那么玩。堆个城堡起来，踢两脚，扔一边儿，再堆一个长城起来，再扔一边儿。玩的时候时刻记得我说的那两条规律。2.在实际工作中，python工程师工作到底是做哪一块的？（尽可能的详细点）亲，请先找到工作。3.如果从事django开发，还需要哪些技能？要学前端么？你学的不是Django开发，你学的应该是计算机科学中，网络应用方向的一部分。这才应该是学什么Php网站开发，Python开发真正应该叫的名字。 Django只是你工具箱里的一个工具而已，比方说它是把锯子。这个锯子的牌子叫做Django. 其他生产锯子的厂家包括但不限于Php, Flask, Java, Go....但是他们的本质都是锯子。都可以做一样的事情。有的厂家在锯子上安了个小手电，于是它的牌子的锯子也许多了一些功能。这就是框架与框架的区别。所以，你需要的不是Django开发的技能，你需要的是网络开发与管理的技能。如果题主专注于做网站的话，相信我，数据库数据库数据库！一个设计良好，结构合理的数据库，是任何优秀网站的前提。4.如果想去实习需要达到什么水平？别想，别问，做吧。当你能按照上面说得，持续不断的更新你得个人项目，持续不断的在SO也好，V2EX也好上累积你的资历，持续不断的，抓住计算机科学的本质去学习。实习？这是个事儿么？


-------------------------answer 1 via  -------------------------


这是个去年的老问题，可能题主的疑惑已经解决了，这个答案主要写给有类似疑惑的人看。如果你学编程时感觉要学的东西很多，毫无头绪，可以来看看这个回答。题主的这种情况，我称之为「深入学习综合征」。具体症状表现是：想学个什么或是写个什么，于是就开始学习相关资料，发现好多东西要学啊，头大……学着学着发现还得学另外一个领域的知识，我勒个去……这不是正确的学习方法啊，正确的方法是增量开发，用啥学啥嘛！！回想高中时学数学的过程，一开始学平面几何的时候，我们也没去学解析几何的方法吧？刚学增函数、减函数的时候，我们也没用导数解决问题吧？学编程也类似，对于任何知识，先只深入到现在够用的程度，把东西码出来再说。就拿题主写个Blog这个需求来举例，我现在自己模拟一下学习过程：Python，俺会import，会用dir()查看属性，会用A.a()调用，好，够了。Django，看起来好麻烦啊，问大牛A，他推荐了Flask，额，怎么还是有点麻烦，又听说有个Bottle，恩，就这个吧。MySQL，靠，SQL语句怎么这么蛋疼……诶？有个号称NoSQL的数据库叫Mongo，就它了。决定用这些东西来写，接下来就开始一步步码：第一步——用Bottle显示一个页面(上网找段代码，依样画葫芦)：from bottle import get, run
 
@get('/')
def homepage():
    return '<p style="color:red">Hello World!</p>'

run(host='', port=25252)
搞定了：第二步——从数据库里拽个东西出来显示：上网搜「Mongo建立数据库、Mongo插入数据」有真相，先往数据库里插几条数据再说：db.test.insert({"text":"first"})
db.test.insert({"text":"second"})
然后搜一下「Python Mongo」找到pymongo库，加到代码里用：from bottle import get, run
import pymongo
db = pymongo.Connection(host = "127.0.0.1", port = 27017).mydb

@get('/')
def homepage():
    rst = ""
    for i in db.test.find():
        rst += "<p>" + i['text'] + "</p>"
    return rst

run(host='', port=25252)
好了，现在网页显示了我这个blog的头两篇文章：诶，我们可以发现，现在我用db.test.insert({"text":"third"})这条语句，可以给我的blog插入新文章了（虽然还不是在网页上操作），而我的网页也可以显示我的所有文章，这样一个最简陋的blog不是已经有了么？我做以上操作只花了5分钟，写了10行Python代码。就算是完完全全的小白，有那么两三天写出这十行不过分吧？接下来，和上面的操作类似，每次确定一个很小的目标，比如「我现在想把网页上文本框里的内容用提交按钮传到服务器上」，然后百度（连Google都不用搬出来！），在半个小时内解决目标，再继续下一个目标……搞着搞着，就会发现Python好像越来越熟练了，前端也掌握了不少技巧……这不就慢慢学会了么？基础的、系统性的知识，可以在之后慢慢补充，凭借上述过程，写个最简陋的blog完全不是问题！接下来的事情，只需要锻炼两种能力就行了：①搜索的能力百度当然不能解决所有问题，之后还要去Google，还要去StackOverflow，看官方文档……②发现问题的能力比如说，上面代码里抄来的 @get('/') 这句，@符号是干什么用的呢？为什么这句话能够让下面那个函数返回网页呢？发现了这些问题，上网搜索，一点点看，就越学越多了。（写于部署一个PHP网站被恶心得要死的晚上，人生苦短，去XXX的PHP！！）


-------------------------answer 2 via  -------------------------


看到上述答主的回答我真的，真的受不了了啊！！！！人家题主真心真意想咨询python的学习方法，你看你们都回答些什么东西啊！那个目前最高票的答主，你贴一堆无关的图片，有毛用啊！还有的答主，人家问django怎么学，你回答其他框架blablabla，然后对比了一番flask、web.py啥的，这是干啥呢！我画个简图，这个图有点山寨，其实是招聘的提问参考（大牛们请勿吐槽，这真的是简图）：言归正传。本答主使用django二年有余，曾经用django做管理后台、做cms、做pv几千的问答网站，和题主一样，也是从0基础开始学。我很能理解题主的困惑。1.请问下一步我该干什么了？（我真的是不知道该往那个方向？阶段？）你处在初学的阶段，就算你天天跟django打交道，前几个月都是初学阶段。你已经觉得很迷茫了，说明真正入门了。我的建议是，你该准备一些web开发的基础知识了a、你应当了解一下某种数据库软件，mysql、Mongodb均可，推荐mysql至少应该具备独立安装配置mysql数据库、和基础的SQL语法常识b、你应当了解一下常见的HTML标签和语法，应当了解常见的css样式，基本的JS语法（至少能用JS写个ajax收发吧）推荐你看看http://getbootstrap.com/">bootstrap花两三天时间，掌握bootstrap以后，你就可以独自实现前端c、你应当了解，django不是服务器，只提供服务。因此，学习nginx、或是apache是必要的。（IIS不了解，不过题主应该不在windows下部署网站吧。。。）d、其他的，你自己慢慢会发现2.在实际工作中，python工程师工作到底是做哪一块的？（尽可能的详细点）我觉得你是想问django工程师吧？我们对django工程师要求较为全面（但是并不难），主要就是服务器后端的这些业务逻辑了，顺便，也要做一些full-stack的工作。具体点说，django工程师和产品沟通，确定网络服务的功能，然后独自设计数据库，设计网站结构、URL结构，独自完成网站的所有服务器逻辑；还要和前端交流，协助他们把想法变成代码。如果你真的是问python工程师，他们要干的就多了，写服务器、写爬虫、写运维工具、做数据分析、有时还要改开源的项目3.如果从事django开发，还需要哪些技能？要学前端么？前端要学，但是只需要能改简单的css代码、还有就是javascript越懂越好其他技能：在（1）问中回答了4.如果想去实习需要达到什么水平？题主你没说哪家公司啊！！鉴于国内使用django的公司真的很少，这个真的很难说。不过之前的标准为例：pythonic
必须熟练掌握至少一类python网络框架，如django、tornado或其他
必须熟悉异步编程，掌握twisted框架加分
必须熟悉并习惯在Linux/Unix下进行日常开发，了解Linux下的服务器级应用程序，如Nginx,MySQL/Postgresql, Redis, Sphinx等
必须掌握javascript、jQuery，具备基础的前端代码设计能力
必须掌握、善用UnitTest进行开发，
熟悉MySQL或Postgresql, 能够编写DDL，DML，
熟悉HTTP协议，了解RESTful
如果题主你学习的首要目的是就业，可以考虑PHP，需求大


-------------------------answer 3 via  -------------------------


做个稍微的总结吧，已经有人吐槽我了python工程师的工作比较广，因为python能做很多事，数据挖掘可以用python，做小游戏可以用python，写网站也可以用python，黑客也用python。前端要学。使用linux，熟悉bash命令会用html，dreamwaver可以不学。会用sql，区分动态和静态页面一个重要的因素就是数据库。做好python2到python3的转移，django1.5就已经开始支持python3了英语要过得去，因为往往你需要的documentation还没有翻译。。。js可以不用深入地学，因为django自带提交表单，不用js也可以连接数据库。stackoverflow是个好网站，有利于人民的好网站，只是你英语要过得去。csdn上有很多大牛的日记，值得收藏。最后一句，请诸位知友指摘。-------------------------------------------------------------------------我当初就想做个网站。我听说Python能做网站，而且很吊，我就去学了Python。结果发现他们都是在Linux下写的代码，而我在Windows上装了一次Python后再也不想在Windows上写代码了，于是我去装了双系统，我装了Ubuntu，我发现好像不用bash没办法操作ubuntu，于是我就去学了bash命令行，顺带学会了vi然后发现我得学HTML，虽然有HTML和HTML5的区别，当时预感到HTML5是个大坑，我果断跳了这个大坑。我去学了html，发现像HTML用手打代码太恶心了，我我又去学了dreamwaver，没错是盗版，谴责我吧，我原以为dreamwaver是和ps一样的操作，结果发现是这傻逼玩意，我还是手动撸代码吗。这时侯我就能做出一个简易的网站了，乘胜追击，继续学习django，我发现我需要用到SQL于是我就去学了SQL千辛万苦，sql也学了一些，我发现貌似没有js的网页似乎。。。但我预感到js是个大坑，我没有学js，所以我让我的一位程序员朋友去学，然后我回来继续学习Django，我学的版本是Django1.2，我发现一个很重要的问题，卧槽，这怎么引用css？？？对了关于css的问题，我已经在html里解决掉了，我意外的在互联网的某个角落里发现Django1.2不支持引用CSS。。。。我默默去学了Django1.5，对，去Django官网上，因为我发现，妹的！我已经走到没有翻译的荒原了！！！点开一本国人的Django book，满心欢喜，结果就翻译了第一章。。。我默默关上了网站我去学习英语了然后然后。。。。我用Django1.5重写了网站，虽然量不大，但是很折磨人。CSS也引用也解决了，就差js了，我错误地预料到js并不是一个大坑，我的程序员朋友是个大坑。。。不过幸好！！！Django自带提交表单，所以不用js也行。然后就到了现在，距离我开始学习Python已经十个月了，但是我只是个小会计啊啊啊啊！！！！！！你妹呀！！！感觉自己整个技能树都被点歪了。。。我想说啥呢，1.知乎上推荐的那些Python的书都很好，但是不够。2.正确的学习姿势是什么样的呢？？？一边撸代码，一边使用bing，一边上Stack Overflow，每次都能在那里喜极而泣，原来我这样的傻逼，世界上还有那么多。3.CSDN是个好网站，里面有很多大神，让我反复了解我是个傻逼的现实。4.你需要足够傻逼继续前进，因为你现在在一个大坑里面，现在回头还来得及。5.现在一把辛酸泪，请问哪家公司需要一个会写代码的会计，我萌萌哒的哟！！！算了我还是去考研吧。----------------------------------------------------------------------------------------------------------看来我做的东西还是上不了台面，迄今图床问题也还在困扰我，就不贴出来了。


-------------------------answer 4 via  -------------------------


update============要不是有人评论，我已经忘记我回答过这个问题了，初学Python想尝试Web开发的请转Flask，可以圆你个网站梦。下面是原始答案======@卫枫 的答案很幽默也是事实，其实Django就是一个大坑，不过也是有办法填上的，我推荐楼主去Learn | Codecademy去学，按照顺序学，HTML/CSS, 静态网站，JavaScript，动态网站，Python，这些学完了再去接触Django。首先要明确Django不是给初学者练手用的，他是一个全栈的MVC（官方成为MVT）Web框架，除了上面我提到的技术，还要会SQL（Mysql），以及bash（Linux），Apache/Nginx（Web Server）。这些是做一个网站的基本。当然无论什么web框架都不是给新手练手的，其实python可以学的东西很多，比如爬虫，很多人都是从这个入门的，因为想要爬网站必然要了解HTML，可以在这个阶段练习python的使用，慢慢的学习HTML，如果抓的数据比较多可以开始考虑使用数据库了，也可以作为一种练习。当慢慢的学会编程了之后，机会有很多人推荐你使用linux系统，你也会因为好奇心去接触一下，这也为将来打下的一定基础。慢慢的一步一步来，当你觉得自己已经能驾驭当前的任务的时候，想挑战一把的时候就可以去学Django了，另外提示一点Django的基于类的视图是比较坑的东西，页面比较少的情况仅使用基于函数的视图就好了，有助于你理解MVC框架的结构。当然，我在学python的时候是用Django做了一个网站的，我还用了bootstrap的CSS库，做的还蛮好看的（每一个程序员的内心都有一个做美工的小我）。不过这是我在学python半年之后，用了整整一个月才做出来的，正好的是毕业前的一个月，基本什么都没干，毕业答辩的PPT有也只用了4个小时就做完了!虽然我之后的工作是数据挖掘工程师，基本很少接触前端，不过还是有幸在我们公司网站的后台做了一个页面，因为数据挖掘结果需要向运维的同事呈现，又是后台不用给客户看，而且那个数据库的接口是我提供的，再加上技术部刚离职了一个web工程师有点忙不过来，我们总监跟我说这个页面你看着搞吧，不用好看，能显示就行。结果我一个下午就弄出来了，还是小有成就感的。当然我一开始学python就是用于做数据分析的，要不有机会做大数据，我才不当程序员呢！


-------------------------answer 5 via  -------------------------


1. 不要一边学py一边学dj。因为你对py基本语法和库没掌握情况下，又去学web的东西，只会让你更头大。2. 学dj之前，先了解http协议，以及服务器和浏览器是如何配合着工作的。这方面的书有《图解http》、《http权威指南》可以看一下。3. 学dj过程中最好把linux和sql给学会，不解释。如果你不打算专门从事前端，也要看一遍html，js和jq。css可以不看，直接用bootstrap。这方面可以直接看 w3school 在线教程 。4. 如果你觉得累了，看一看其他语言的框架。就会发现mvc在这些框架里面其实都是一回事。5. 实际开发中需要严格的mvc分离。然后根据需求划分页面，根据页面划分相应的m v 和c层。开发中始终按照这个就好。django book 2.0： The Django Bookdjango中文文档 1.8（还在翻译，欢迎大家参与）：  http://python.usyiyi.cn/django/index.html


-------------------------answer 6 via  -------------------------


因为你是刚刚开始接触，所以你需要学习的不是django而是最基础的python。django作为一个web框架，它其实是将大量的python代码进行了封装。在你对python对webserver还不是很了解的情况下直接接触django相当于是隐藏了很多你并不知道的知识。另外应该怎么从零基础去学呢？首先，你并不是要学习django，也不是要学习python，你是要学习用python的django框架搭建一个网站。不知道你最初是否只是想要搭建一个网站，我就先当你的目的是期望能够熟悉如何搭建一个网站。所以你要搞清楚的是怎么搭建一个网站，只是你选择了通过python django 而已。所以你应该先选择用简单的工具去搭建一个简单的网站，最后再去尝试用复杂一点的框架去搭建一个复杂一点的网站。所以建议通过以下步骤：1：使用内置的库，活着一些非常基础的http库去搭建一个http服务，使得它能够返回helloworld，通过这个步骤搞清楚http服务的本质，搞清楚 url，request response 什么的。2：利用一个稍微经过封装的web框架（模块），比如python的pyweb，搭建一个真正的html页面，稍微有点css和js的内容，比如可以搞一个红色的按钮，然后点击一点弹出helloworld，利用这个步骤了解下url路由，静态web文件夹什么的，顺便搞清楚css和js是什么，不要去用什么dreamwave。3：web框架可以继续升级，了解MVC设计模式，用以下后端的模板，搞清楚模板和html的关系。开始做你想要做的网站。也可以继续专研一下各种库啊框架的代码。顺便了解下数据库。4：基础的掌握之后就要开始朝专业迈进，学习下专业的网站是怎么做性能优化，模块架构设计，代码管理，上线监控等。最好是能够通过去公司实习学习是最快的，不行就去github上搞一些开源的项目自己部署研究玩玩。其实我说得这些和python无关，其实我对python也不熟，也没能完全回答你的问题，只是知道些皮毛，给个大概的建议吧。同样你要是不用python用NodeJs，Go，Java，Php都行。不过python算是个入门不错的选择。要是对js感兴趣可以用下NodeJs，要是对新的东西感兴趣可以用Go，Java和Php都行，你要会C++其实也行。循序渐进，保持热情。


-------------------------answer 7 via  -------------------------


和楼主一样迷茫到现在。一样的是想学django，学learn django然后发现，做出来的页面太丑，又去学HTML发现HTML要灵活，还是得学JS，于是又去学JS目前还在学JS中然后发现，python扒出来的东西要分类存储分析于是去学了Mysql后来发现mysql的交互很差，听说oracle很好很强大，mysql也要往这个方向走于是去装了oracle的客户端然后学了点sql当我要把python扒出来的数据放到oracle里面的时候问题出现了我用的是64bit的python  电脑也是64bit的oracle 也是 64bit的但是 cx_oracles只有 32bit的 于是我装了卸，卸了装终于我决定用mysql算了------------------------------------------------时隔多日，在补充下最近进度。关于python 掉oracle问题，主要是和平时在公司的项目是做oracle的，所以想把python作为一个小工具用，能加快开发效率，测试一些方法等。我的开发环境是 win7 64bit, python 64bit. 这样的话，安装一个64位的客户端实际是可以用的。但是PLSQL不认64位的oci.dll，有具体的方法，可以下载一个 instance，直接解压后，把配置文件放到文件夹中，然后plsql引用即可。最近摸索的是python 的scrapy。可能是我的学习习惯不太好，比较心急，一些基础的东西没有耐心的去看，所以，对照这教程去重现，但是没有深刻的去理解，实际上，因为基础不是很扎实，所以理解起来也比较困难。可能很多人学习新语言都有这样的一个过程。但是，坚持过一段时间后，会豁然开朗的。所以，题主要做还是坚持去尝试用python做一点自己喜欢的事情。比如从一些网站上爬一堆照片，然后放到自己的django搭建的网站上。总之，坚持和反省。与你共勉。


-------------------------answer 8 via  -------------------------


这个问题必须回答一下啊，先说过程。1、我是从javascript开始的，听说这是最适合入门的语言呐。用了半年的零碎时间，总算搞清了一些概念，然后呢，听说《javascript高级程序设计》很不错，就买了电子版，难度好大，读了一半。2、了解到js只是做动态网页的，回头又学了html和css,水平很菜。3、接下来就是后端的python,用的codecademy的教程和《learn python hard way》中文版入门。4、然后听说这要上手练习才学的比较快，用的是《head first to python》，了解到还有数据库。5、开始学了简单的SQL，主要针对MYSQL，咦，还有非关系数据库，差点有去学了Mongodb.6、开始学习django 框架，用的是《django book》，中文版的内容没更新，不好用，不过总算做了个模型，没买域名，打算部署在新浪的云引擎，折腾了好久，总算行了。7、回头接着看《django book》。经验和教训：1、不要太心急，编程需要长久的积累，一年肯定不行，当时部署到云引擎的时候数据库老出错，卡了好久。2、看英文文档，这样更新比较快。技术类的文档词汇量并不大，多查词典生词的意思就知道了。我一般开着有道词典看，不会了就查，慢慢的就可以看懂了。3、知行合一，一边学一边动手做是学的最快的，这样在做的时候也容易发现问题，加深理解。


-------------------------answer 9 via  -------------------------


我跟你一样，文科生，没有编程基础，入了知乎的坑，没基础硬看了5个月的C++，跟了一点数据结构和算法，计算机系统和网络，P东西都做不出来；前几天突然知道了python和django,读了读文档，一下就上手了，开心。 感觉还是注意加强一下基础，比较好些，加油！
