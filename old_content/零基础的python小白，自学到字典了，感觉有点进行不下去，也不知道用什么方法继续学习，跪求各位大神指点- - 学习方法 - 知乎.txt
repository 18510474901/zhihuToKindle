


零基础的python小白，自学到字典了，感觉有点进行不下去，也不知道用什么方法继续学习，跪求各位大神指点? - 学习方法 - 知乎






--------------------Link http://www.zhihu.com/question/28667367 ----------------------





--------------------Detail----------------------

零基础的python小白，自学到字典了，感觉有点进行不下去，也不知道用什么方法继续学习，跪求各位大神指点。

-------------------------answer 0 via  -------------------------


最好的办法还是学以致用。 曾经我学过大部分的编程语言，但是最后坚持到最后的没有几个。 不过python却是用到现在的语言。原因就是 python的实用性。多根据你个人需求，来写几个程序，你就会有成就感。 你就会有学下去的动力。比如：python爬虫 推送知乎文章到kindle电子书


-------------------------answer 1 via  -------------------------


学不下去一般就是对所学东西理解不够或者知识面断层。前者的话需要多看多练，后者的话就要根据你的问题有针对性的学习。题主的情况可能想的太深，那就需要看看稍微底层点的内容；或者对字典等类型有迷惑，那就去了解一下数据结构。


-------------------------answer 2 via  -------------------------


自己用的数据结构继承一下 dict 还是挺方便的。import weakref
import pickle

class MyDict(dict):

	def __init__(self, logger, parent, a, b, c):
		dict.__init__(self)

		# 不能序列化的成员，用一般成员
		self._logger= logger
		self._parent= weakref.ref(parent)

		# 可以序列化的成员，用键值对
		self['a']= a
		self['b']= b
		self['c']= c

	# 然后你就可以干这样的事了 ... ...
	def 返回序列化副本(self):
		return {key: val for key, val in self.items()}

	def 保存对象(self, 文件路径):
		保存副本= self.返回序列化副本()
		文件对象= open(file=文件路径, mode='wb')
		pickle.dump(保存副本, 文件对象)

	def 网络传输(self, 网络接口):
		传输副本= self.返回序列化副本()
		网络接口.发送数据(传输副本)
但是，对 list 不能这样干。


-------------------------answer 3 via  -------------------------


你也可以去看视频，例如 中谷教育Python教程。那个讲师讲的还好。然后跟着敲一点代码就好了


-------------------------answer 4 via  -------------------------


我用了半年的业余时间学习python,目前可以写点小爬虫. 当初我在类上卡了好久,和题主的状况差不多.你可以参考下我的经验.1.教材学习python,特别python是第一门编程语言的.一定要用入门级别的教材.推荐 :a.<和孩子一起学编程 >很通俗易懂的教材b.<笨办法学python>教你如何自力更生通过网络上的资源来学习python,强力推荐虽然有点难.c.Python教程 - 廖雪峰的官方网站2.一定要多写代码学习编程和学习画画是差不多的.理论的东西看的再多都没用,一定要拿起键盘多写代码.教材里出现的案例代码一定要弄懂,最好手动打上一遍.  3.通过项目学习给自己弄个小项目,让需求推动你去学习.而不是为了学习去学习.


-------------------------answer 5 via  -------------------------


找到这里是因为我自己的烦闷。尤其看到那个copy和 deepcopy。copy出来的行为太怪了。  感觉这部分好乱。脑子里没有合适的框架组织他们。 作者说可以等到用到再深入了解。可我觉得至少我要知道有那么个东西在那里吧。也许这就足够了。 虽然是面对复杂环境时常不得不用的方法。但内心还是期待有更为有洞见的回答。


-------------------------answer 6 via  -------------------------


认真看书，敲代码，动手＋动脑。
