


阅读django源代码？ - 编程 - 知乎






--------------------Link http://www.zhihu.com/question/27720699 ----------------------





--------------------Detail----------------------

使用django也有一段时间了，但是只会使用，而不知其所以然，看到很多大神从来都是阅读源代码来了解一个系统的，所以我也想试一试，我的Python基础已经有了，然而我发现当我想阅读的时候却不知从何读起，是从程序入口入去读呢，还是不管这些直接看里面的代码包，我的理解应该是先了解程序的运行机制，所以我从入口处通过debug单步运行开始读起，但是感觉效率好低，跳来跳去，程序的嵌套把我自己都搞晕了，我现在就是感觉晕乎乎的，所以请各位大神们帮助，非常感谢，本人只学习Python不到两个月，从事编程工作刚满一年，学了一大堆程序语言，正是想提高自己的时候，希望各位能够不吝赐教。

-------------------------answer 0 via  -------------------------


django用了两年半了，从1.4用起。至今已经熟读了django的绝大部分子系统（orm，forms，模板，cbv，admin等等），一路读了1.5，1.6，1.7到现在github中django项目的每个提交都会大致扫一下。一开始看源码只是因为用的时候报错调用栈是从django的代码中抛出，就顺藤摸瓜看看它对应这个功能怎么实现的，到后面熟悉到有功能不知怎么用时，有如翻文档不如直接看源码来的快且准确。django的源代码其实很易读，首先它功能拆分非常细致合理，比如orm部分就在django.db.models中，admin就在django.contrib.admin中。其次django的设计思想是非常OO的，大量使用继承，元类等，比如所有的简单models fields都继承自models.fields.Field ，在此基础上又继承出RelationField(对应ForeignKey和OneToOneField)以及MultiRelationField（对应ManyToManyField)，只要找到一个类，顺藤摸瓜往上看，整个子系统的结构就非常清楚了。看django源码中学到了很多，比如命名规范，代码拆分，类的抽象，成长不少。现在看源码更多是为了针对特定需求扩展，比如刚写了对postgres 9.4中jsonb字段的查询支持，使用了1.7中新增的Transform API.


-------------------------answer 1 via  -------------------------


个人觉得这就和做数学题一样，我们使用各种定理去解答问题，但并非要明白每个所使用定理的证明过程（内部原理），只有当我们觉得某个定理是瓶颈或者认为有可能错误时，再去确认其细节。我想使用django也一样，我会使用django写一个项目（blog?)，当我发现ORM是瓶颈时，我会去看相关的代码；当我想扩充template filter/tag功能时，我会去查看相关代码，等等。


-------------------------answer 2 via  -------------------------


Django is Python


-------------------------answer 3 via  -------------------------


与其在这里问，不如开始读。从入口文件开始。


-------------------------answer 4 via  -------------------------


直接在网上找相关的文章看看，这样可以理理头绪。


-------------------------answer 5 via  -------------------------


看代码，如果有条件就带行号带高亮打印出来。Django代码质量不低，变量名啊注释啊都很到位，直接看很方便
