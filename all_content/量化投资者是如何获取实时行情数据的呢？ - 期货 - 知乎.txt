


量化投资者是如何获取实时行情数据的呢？ - 期货 - 知乎






--------------------Link http://www.zhihu.com/question/27980657 ----------------------





--------------------Detail----------------------

几乎所有的宽客都会使用Matlab，用这种专业的数学软件来处理行情。但我发现历史数据很好找，可以下载后导入Matlab，而实时的行情则难以获取，主流的行情软件也没有提供相关的接口。这样就使得量化只存在于回测上，无法运用于实盘。已经成功的宽客是怎样实时获取数据的呢？是怎样高效地接收处理这么多股票、期货的逐笔成交、分时数据的呢？

-------------------------answer 0 via  -------------------------


国内，网易可下载，包括分笔数据。------------以下是更新（2015-05-08）------------为啥会有人说找不到呢？以工商银行为例的URL：日内实时盘口（JSON）：http://api.money.126.net/data/feed/1000002,1000001,1000881,0601398,money.api历史成交数据（CSV）：http://quotes.money.163.com/service/chddata.html?code=0601398&start=20000720&end=20150508财务指标（CSV）：http://quotes.money.163.com/service/zycwzb_601398.html?type=report资产负债表（CSV）：http://quotes.money.163.com/service/zcfzb_601398.html利润表（CSV）：http://quotes.money.163.com/service/lrb_601398.html现金流表（CSV）：http://quotes.money.163.com/service/xjllb_601398.html杜邦分析（HTML）：http://quotes.money.163.com/f10/dbfx_601398.html


-------------------------answer 1 via  -------------------------


基本都是自己封装CTP接口，程序端实现多账户、多策略的行情信号接收和委托提交/回报处理。也可以用 QuantBox/QuantBox_XAPI · GitHub 这样的封装的比较好、多接口统一API的项目直接整合到程序化平台的项目中使用。通过程序接口用证券、期货账号登录后订阅品种的行情，证券、商品期货、股指期货、期权（全真模拟，9号就有实盘行情）都可以接收交易所的快照数据（例如商
品、股指都是500ms一个快照，数据结构也比较完整）。然后交易平台可以把行情数据广播给各个策略程序，程序根据量化策略的逻辑判断是否下单？挂单的方
式如何？挂单失败是否追单？如何追单？策略程序判断要下单，则提交指令到程序化交易平台，平台把各个帐号各个品种中策略的逻辑持仓汇总为实际持仓，然后通过接口提交委托，并且处理委托回报。行情数据一方面广播给策略程序，一方面自己存数据库，存下来的数据通过完整性检测后，可以自己合成低频率的数据，如
1分钟、30分钟、1小时、日度等等，这些数据会被用于策略回测，也可以用于市场微观结构的观察和研究，例如可以通过优化挂单方式来降低交易滑点。Matlab可以做一些回测，实盘可能是比较不易用的。一般可以用C++, Java, C#来利用CTP程序化交易接口实现实盘平台，策略研究推荐用R做数据分析、统计、处理、可视化、策略分析、自动报告，用Rcpp（R调用C++）或者直接C++实现高性能回测，用单机并行或集群实现批量回测。


-------------------------answer 2 via  -------------------------


用Python获取实时行情数据的开源项目汇总：[1]: GitHub - felixglow/Stock: python使用线程池实时获取股票价格 python use threading pool to get the stock's price via terminal  [2]: GitHub - waditu/tushare: TuShare is a utility for crawling historical data of China stocks  [3]: GitHub - nooperpudd/chinastock: chinastock 中国股票行情，数据  [4]: GitHub - benitoro/stockholm: 一个股票数据（沪深）爬虫和选股策略测试框架  [5]: GitHub - shidenggui/easyquotation: 实时获取新浪 / Leverfun 的免费股票以及 level2 十档行情 / 集思路的分级基金行情  [6]: GitHub - wlei-fx/stocks: 每天从网上抓取股票数据并保存到本地以供分析  [7]: GitHub - 1514louluo/mystock: linux查看实时查看股票信息(国内股票)，再也不用偷偷摸摸上班看手机啦。。  [8]: GitHub - zhoudayang/get_recommend_stock: 抓取同花顺level2广告页股票推荐数据，并发送邮件给指定邮箱----------------------------------------------------------------基于Python的开源量化交易平台及组件汇总vnpy [1]基于python的开源交易平台开发框架。项目的用户包括：私募基金，证券自营、资管，期货公司，高校的金融研究院系，个人投资者等，机构用户加起来至少20多家。该项目拥有较为丰富的Python交易和数据API接口，基本覆盖了国内所有常规交易品种（股票、期货、期权），具体包括：CTP（vn.ctp）、飞马（vn.femas）、LTS（vn.lts）、金仕达黄金（vn.ksgold）、金仕达期权（vn.ksotp）、通联数据（vn.datayes）。特点：简洁易用的事件驱动引擎（vn.event），作为事件驱动型交易程序的核心；涵盖针对如何使用API和事件驱动引擎开发交易程序的示例（vn.demo）。项目拥有开箱即用的实盘交易平台vn.trader（相比之下vn.demo仅建议学习用），整合了多种交易接口，并针对具体策略算法和功能开发提供了简洁易用的API。quantdigger[2]一个基于python的量化回测框架。它借鉴了主流商业软件（比如TB, 金字塔）简洁的策略语法，同时避免了它们内置编程语言的局限性，使用通用语言python做为策略开发工具。和 zipline , pyalgotrade 相比，QuantDigger的策略语法更接近策略开发人员的习惯。目前的功能包括：股票回测，期货回测。支持选股，套利，择时,组合策略。自带了一个基于matplotlib编写的简单的策略和k线显示界面，能满足广大量化爱好者基本的回测需求。设计上也兼顾了实盘交易。easyquant[3]股票量化框架，支持行情获取以及交易，基于easytrader和easyquotation 的量化交易框架。支持华泰、佣金宝、银河以及雪球模拟盘交易。支持新浪免费实时行情，1s推送一次，集思路分级基金以及leverfun 的免费十档行情easytrader[4]提供券商华泰/佣金宝/银河/广发/雪球的基金、股票自动程序化交易，量化交易组件，进行自动的程序化股票交易可实现自动登录，支持命令行调用，方便其他语言适配，支持 Python3 / Python2, Linux / Win, 推荐使用 Python3-quartz[5]一个基于Pandas的量化回测框架，核心类库引入pandas，引入pylab库后能够实现可视化结果AshareQuant[6]A股数据维护，把线上数据维护到mongodb，可以写入crontab中运行，定时更新基本面和历史日K线数据vnpy_oanda[7]基于vnpy，对Oanda进行定制的Python开源交易平台开发框架ftsVob[8]基于vnpy+easyquant项目的期货交易系统  [1]: GitHub - vnpy/vnpy: 基于python的开源交易平台开发框架  [2]: GitHub - QuantFans/quantdigger: 基于python的量化交易平台  [3]: GitHub - shidenggui/easyquant: 股票量化框架，支持行情获取以及交易  [4]: GitHub - shidenggui/easytrader: 提供券商华泰/佣金宝/银河/广发/雪球的基金、股票自动程序化交易，量化交易组件  [5]: GitHub - fucheng830/-quartz: 量化回测框架  [6]: GitHub - hezhenke/AshareQuant: A股量化  [7]: GitHub - sniper24/vnpy_oanda: 基于vnpy，对Oanda进行定制的Python开源交易平台开发框架  [8]: GitHub - ruyiqf/ftsVob: 期货交易系统开发基于vnpy+easyquant项目本项目收录各种Python开源量化平台和组件实战代码，并长期更新，欢迎补充。更多Python干货欢迎关注：微信公众号：Python中文社区Python高级技术交流QQ群：273186166Python量化交易策略组QQ群：264204289--------------------------------- Python学习资源下载：Python学习思维脑图大全汇总打包 （密码请关注微信公众号“Python中文社区”后回复“思维”二字获取） 


-------------------------answer 3 via  -------------------------


我做回测都是用的JoinQuant的平台，给个传送门：JoinQuant聚宽量化交易平台。有策略有想法了自己写写然后通过平台的API直接拿数。像财务数据，指数数据和行情数据都有。感觉要比自己从各种第三方集合资源要方便一些。至于数据的可靠性，自己打出来验证过，还暂时没发现什么问题。


-------------------------answer 4 via  -------------------------


现在标准模式是 期货dxtkdxtk/CTP_Center · GitHub股票也是ctp,或者恒生或者fix.niumuguang/AutoTrader · GitHub这是目前业内的实时数据和交易的标准模式。


-------------------------answer 5 via  -------------------------


MATLAB里有个 toolbox 叫 Datafeed，感觉就是做这个用的


-------------------------answer 6 via  -------------------------


专业的prop shop使用，上交所深交所vde，中金所fema udp datafeed，其他几个商品交易所的ctp


-------------------------answer 7 via  -------------------------


可以看下wind的量化接口，有个人免费版以及机构版Wind量化接口、文档下载FQuantToolBox版本更新V1.2-基于MATLAB的量化数据回测工具箱 by farutohttp://www.matlabsky.com/thread-45744-1-1.html


-------------------------answer 8 via  -------------------------


介绍一下我最近开发的历史日线行情web service接口。此web service提供个股2005年至今的日内历史数据。例如，如果要查询工商银行（601398）2006年10月27日的数据，发送请求http://shuorel.com/ws/share/daily/v1/601398?date=2006-10-27将返回结果{"data":[{"code":"601398","date":"2006-10-27","open":3.4,"high":3.44,"close":3.28,"low":3.26,"volume":2582539562,"amount":8725310440}],"status":"done"}如果要查询多日的数据，例如要查询2006-10-27, 2007-10-27, 2008-10-27, 2009-10-27, 2010-10-27这五日的数据，发送请求http://shuorel.com/ws/share/daily/v1/601398?dates=2006-10-27,2007-10-27,2008-10-27,2009-10-27,2010-10-27将返回结果{"data":[{"code":"601398","date":"2006-10-27","open":3.4,"high":3.44,"close":3.28,"low":3.26,"volume":2582539562,"amount":8725310440},{"code":"601398","date":"2009-10-27","open":5.19,"high":5.2,"close":5.09,"low":5.07,"volume":158426192,"amount":814316736},{"code":"601398","date":"2010-10-27","open":4.44,"high":4.51,"close":4.45,"low":4.41,"volume":155510368,"amount":691467648}],"status":"done"}表明07和08年的10月27日不是交易日无数据。如果要查询一段范围内的数据，例如2016年一月份所有交易日的数据，发送请求http://shuorel.com/ws/share/daily/v1/601398?from=2016-1-1&to=2016-1-31将返回结果{"data":[{"code":"601398","date":"2016-01-04","open":4.58,"high":4.59,"close":4.45,"low":4.44,"volume":147508685,"amount":669360275},{"code":"601398","date":"2016-01-05","open":4.42,"high":4.51,"close":4.47,"low":4.38,"volume":160629284,"amount":715484718},{"code":"601398","date":"2016-01-06","open":4.45,"high":4.52,"close":4.51,"low":4.45,"volume":113177263,"amount":508161231},{"code":"601398","date":"2016-01-07","open":4.49,"high":4.5,"close":4.43,"low":4.42,"volume":34491508,"amount":153712624},{"code":"601398","date":"2016-01-08","open":4.44,"high":4.49,"close":4.46,"low":4.4,"volume":186134474,"amount":827886955},{"code":"601398","date":"2016-01-11","open":4.43,"high":4.43,"close":4.32,"low":4.31,"volume":164702051,"amount":722038638},{"code":"601398","date":"2016-01-12","open":4.36,"high":4.38,"close":4.32,"low":4.31,"volume":115754335,"amount":502307243},{"code":"601398","date":"2016-01-13","open":4.35,"high":4.35,"close":4.3,"low":4.29,"volume":101544385,"amount":439299085},{"code":"601398","date":"2016-01-14","open":4.26,"high":4.31,"close":4.31,"low":4.21,"volume":131047547,"amount":559263229},{"code":"601398","date":"2016-01-15","open":4.29,"high":4.3,"close":4.23,"low":4.21,"volume":101190760,"amount":430207041},{"code":"601398","date":"2016-01-18","open":4.19,"high":4.25,"close":4.19,"low":4.17,"volume":119484135,"amount":502408250},{"code":"601398","date":"2016-01-19","open":4.19,"high":4.27,"close":4.25,"low":4.18,"volume":98135774,"amount":415090802},{"code":"601398","date":"2016-01-20","open":4.25,"high":4.25,"close":4.22,"low":4.17,"volume":106584738,"amount":448627145},{"code":"601398","date":"2016-01-21","open":4.2,"high":4.26,"close":4.18,"low":4.18,"volume":84601580,"amount":356768999},{"code":"601398","date":"2016-01-22","open":4.21,"high":4.22,"close":4.22,"low":4.18,"volume":84696499,"amount":355912034},{"code":"601398","date":"2016-01-25","open":4.22,"high":4.25,"close":4.23,"low":4.2,"volume":62768998,"amount":264870077},{"code":"601398","date":"2016-01-26","open":4.21,"high":4.22,"close":4.08,"low":4.05,"volume":112381408,"amount":464737013},{"code":"601398","date":"2016-01-27","open":4.09,"high":4.15,"close":4.11,"low":4.06,"volume":152478645,"amount":625439810},{"code":"601398","date":"2016-01-28","open":4.1,"high":4.1,"close":4.05,"low":4.02,"volume":90199334,"amount":366284746},{"code":"601398","date":"2016-01-29","open":4.04,"high":4.12,"close":4.1,"low":4.03,"volume":137585643,"amount":561102779}],"status":"done"}请注意，范围查询最多返回前50日的结果。目前已完成的其他数据接口还包括1）A股实时股票行情，指数行情2） A股分红送股历史数据3） A股股本结构历史数据使用说明将在 http://www.shuorel.com/ 陆续发布。


-------------------------answer 9 via  -------------------------


不知道你说的主流行情软件是什么…传统的wind还有最近出的好几个终端什么ifnd之类的都有对Matlab R VBA PYthon的api接口…不管是高频序列、实时行情还是基础数据的都是比较齐全…还有通联数据貌似也蛮好用的，只不过都是付费的…免费的有没有我不知道
