


想做 C++ 方面开发，是基于 Linux 还是基于 Windows 平台？ - Microsoft Windows - 知乎






--------------------Link http://www.zhihu.com/question/23534399 ----------------------





--------------------Detail----------------------

小硕一枚，面腾讯、阿里均被鄙视 C++ 方面项目不咋地。最近在看 C++ 方面深入的书籍，但感觉没有动手效果并不是很好。导师没有关于 C++ 方面的项目，现在想做一些 C++ 方面的项目有以下几点疑惑：1. 不知道选择什么系统，是 Linux 还是 windows？2. 台选好了之后是做开源项目还是模仿某个项目，有没有什么建议？3. 如果项目是为了面试做准备，项目的侧重点应该是什么？

-------------------------answer 0 via  -------------------------


C++、OS和項目是正交關係。C++本身是跨平台的。OS對開發來說主要是其API、架構特性等。項目才是問題。如果做後台方面，Linux比Windows更為普及。如果是前台方面則是相反。如果是移動應用，Android主要是Java，iOS主要是OC。而如果是遊戲，用C++跨Windows、Android、iOS開發不是難事。C++就只是一個語言而已。都讀研了，不是應該做某些領域的研究項目麼？


-------------------------answer 1 via  -------------------------


我觉得故事是这样发展的....先是纠结语言(lisp没听过听说python效率不高还缩进原来ruby是小鬼子弄的那个什么叫lua的只能用来写游戏脚本放眼望去java只能做民工啊那个c语言土掉渣, 过时几百年了还得是cpp适合干大事, 老师也这么说就是cpp了! 语言选完了选win/*nixM$罪恶滔天罄竹难书啊, 我们要抵制这些罪恶的大公司*nix代表了不为常人所理解的先进与自由就是*nix了!定下*nix后拿不准BSD和LinuxLinux仿制unix是山寨货BSD学院出身高贵典雅就是BSD了!选了BSD后三选一NetBSD安全稳定简洁, 哎哟没程序呀, 换!OpenBSD听说更安全, 我操安装好麻烦, 换!FreeBSD传说最通用, 怎么安装还这么麻烦??? 操, 换!得, 还是委曲求全用Linux!选了Linux后要挑发行版redhat是给傻逼企业做的, 不geek, 滚centos是redhat的山寨翻版, 和redhat一起滚国产发行版滚gentoo感觉不错, 尼玛怎么每个软件都要编译烧CPU? 滚fedora/opensuse包管理器不好, 滚arch太小众又标新立异, 滚ubuntu是给土鳖用的, 滚debian出身高贵血统纯正平易近人就是debian了!挑了Debian后犹豫sid/testing/stablestable太保守了, passtesting还是太保守了, passsid好, 要的就是这种最新最酷炫的感觉就是sid了!然后是KDE和Gnome啦Gnome自由可是Gnome是土掉渣的c语言写的但是KDE不自由 可是KDE是高大上的cpp写的...虽然自由诚可贵, 而且Gnome逼格高, 不过为了cpp, 区区自由算个鸟就是KDE了!挑选桌面管理Gnome已经出局KDE默认太臃肿xfce不够精简e17不过如斯既然用linux了, 不DIY怎么能体现自己的geek精神呢?自己凑吧!怎么凑呢?*wm系列都好土啊*box系列都好逊啊awesome好帅啊就awesome了!凑出桌面后, 终于可以开始开发了....做什么项目呢.....?网络程序很好的样子画图也是不错的分支啊web开发好像很紧俏移动互联网已经来了?手机app好像可以日进斗金还是先看看网络吧!网络要选库啊...libevent好像太老了, 还是c语言写的libev快多了, 等等...怎么又是c语言写的? 为什么老有人喜欢用土掉渣的c语言?asio好像太简陋了啊ACE太复杂了啊自己写不会啊还是试试画图好了, 这次一定不改了!画图又是选库....SDL太老, 还是c语言写的OGRE太复杂啊irrlicht太简陋啊一大票捆脚本的不可靠啊还是看看web开发吧, 这次真的不再改了!web开发的选择....cpp裸写cgi好像有点麻烦啊lua写cgi好像方便多了但是lua只能用来写游戏脚本啊perl据说写完看不懂被淘汰了啊jsp是民工的东西啊ruby的ror好像好新潮但小鬼子的东西坚决不能碰啊python效率不高而且缩进啊go没有成熟框架肯定不好用啊听说PHP是世界上最好的语言以至于连facebook都主要用它, 就是PHP了!呵呵..... (咦, 说好的cpp呢?)


-------------------------answer 2 via  -------------------------


为什么要选定一个平台？一个真正的C++程序员，可以在Mac上用xcode 混合写C++和OC，用Android NDK写库通过JNI给Java用，在Windows上用Mingw交叉编译dll用VC++调用，在Linux上用C++写服务端，最后用Qt写GUI客户端通吃 Windows Linux Mac平台。


-------------------------answer 3 via  -------------------------


文人相轻。程序员也一样。互相鄙视的还少吗？linux鄙视windows，C鄙视C++，java鄙视C#，python和ruby和javascript互相鄙视，so what？工作还不是为了赚钱，用C++赚钱比做python的多，还有什么不满意吗？你要注意，互联网上什么人最多，当然是做互联网的。他们有自己的领域特征。虽然互联网的盈利也只是整个IT行业一个不起眼的小角落，但是出来喊喇叭的人就是多，啊哈哈哈。你不要被这种言论误导了，最终让你自己自身价值发扬光大的，是你的领域知识，而不是工具。没有什么人规定说，做linux一定比做windows牛逼，或者做windows一定比做linux牛逼。牛逼的都是人，不是工具。在绝大多数情况下，你用windows和用linux写程序其实没什么太大的区别，因为OS之间的差异其实跟你没什么关系，哪个顺手用哪个。靠谱的程序员，从来都是因为写出来的代码靠谱而让自己变得靠谱。二逼的程序员，从来都是通过宣传自己的工具……


-------------------------answer 4 via  -------------------------


感觉很多人的学习编程的方式有问题,他们的学习是围绕着语言开展的.比如,学习某语言有什么项目的代码可以推荐.比如,在什么平台下学习某语言最合适.等等,这样就会造成,对语言的偏执和宗教信仰,再以后找工作了又非该语言的事情不做.我觉得这样的思路很有问题.每一门语言,都有其适应的领域,这里不再展开讨论.我认为更好的学习方式,是以项目展开来学习.首先选择自己兴趣的方向,然后围绕这个方向,学习其相关知识,其中就包括了适用该领域的语言.以我自己为例,我想学学分布式相关的知识.目前在基于riak学习Dynamo的实现,这样就顺便能把Erlang学习了,后续我还想基于另外的分布式开源项目来学习Java/Scala.


-------------------------answer 5 via  -------------------------


1.选Linux不管你打算学C，C++，JAVA，LISP，Scheme，Opengl，统统选Linux。除非你要做Window的客户端和DirectX游戏。2.强迫自己写个最简单的Ftp或Http服务器，然后把并发容量做到单机1w中间你能学会读标准，网络接口，队列，回调设计，内存管理，异常处理原则和性能定位工具的使用（别用已有网络库，只依赖系统调用）。别在软件工程这类鸡汤上浪费时间。把gdb和windbg的使用作为最重要的技能发展。3.做到2，你已经能灭掉市面上大多数30岁左右的面试官和不少35岁以下的面试官。如果你能在面试前看完下面的书：计算机程序的构造和解释软件调试深入理解计算机系统程序员的自我修养基本上你和牛逼面试官的差距就只在：数据库分布式理论架构项目管理某些工业语言而其他方面都不吃亏，甚至会占优。上面这些会真正让你在技术上变强，兼顾职业发展。只要有机会，就经常自己造轮子，和造轮子无用党比，过几年会发现你能轻易看到他们看不到的风险。你能轻易做到他们认为做不到的事。你能更容易认识到很多问题的本质，而且并不只局限在软件技术层面。追逐某些大公司的职位而建立知识体系其实是很短视的，可惜我很晚才明白这个道理。还有最重要一点，你足够聪明又能吃苦，又想赚大钱，这个方向的投入和回报会很容易让你灰心


-------------------------answer 6 via  -------------------------


1.不知道选择什么系统，是linux还是windows真正的C++是和平台无关的。。不管是linux还是windows。。如果推荐我推荐Linux，GCC编译器更严格，很多在windows vs下可以编译的程序在GCC下不通过或者有警告。。推荐自己装一个虚拟机CentOS之类，然后学习。2.平台选好了之后是做开源项目还是模仿某个项目，有没有什么建议平台学好之后，比较容易上手的可以学习ACE，学习ACE是对C++提高最大的，而且里面很多设计模式的东西。。我负责任的说，你能搞懂ACE，找工作应该没问题。。其他还有boost，这个也是一个很好的库。。你没看招聘上一般都会写，对ACE或者boost有一定了解么。。学编程语言一定要写，自己写个小程序，比如做个基于ACE的客户端，服务器程序，可以测试一下。。面试的时候也可以讲。。3.如果项目是为了面试做准备，项目的侧重点应该是什么应届生面试，一方面看你的学习能力，一方面看你的本性。。当然，有些基本的排序时间复杂度什么的也要知道。。然后把你做的东西说一下，我觉得就ok了。。顺便说一句，我觉得会脚本比如python，shell之类很加分。。这种脚本上手快，编写简单，功能强大，使用范围多。。我觉得是真正做事情的人懂得语言。。比那种会记住几种排序算法的人高大上多了。。


-------------------------answer 7 via  -------------------------


还是看你到底要做什么项目，使用什么类库，以及项目或类库对系统的耦合程度有多高的要求


-------------------------answer 8 via  -------------------------


我本来想吐槽来着......但是上面的朋友们都吐完了,对于我这种C狗来说,实在是找不到什么可吐的~~~~我觉得对于题主来说,现在最重要的是先动手吧,我的建议是找一个项目,先不管他用的是什么系统,人家本来用的是啥,你就用啥.记住,是选择一个你喜欢的方向,根据这个方向找项目,项目可以用什么平台你就用什么平台;不是选择一个你喜欢的平台,之后根据这个平台选项目.操作系统是一个很厉害的东西,但对于你来说,仅仅是工具而已.你没有必要去了解它的每一个细节,你需要的,是找到自己的方向,找到可以让你奋斗的目标.不要让这些工具,成为你停滞不前的理由.关于项目选择的问题,开源不开源,有没有源代码,都没有太大关系.源代码的问题,其实和操作系统的问题一样,舞者是要在舞台上跳舞,而不是去研究舞台的结构.当然了解舞台的结构是一件好事.但是,这件事最好在你的舞已经跳得很好的基础上面做.第三个问题,不要为了面试而做项目,过几年你会发现,这是多么愚蠢的一个行为.首先,你做项目是为了在面试中有东西可讲,但是你知道吗?面试官根本不会在意这种项目,想想我当时讲的,什么俄罗斯方块,什么校园网络系统,在面试官的眼中,这些东西和小孩子玩泥沙差不多啊~~~我依稀记得,当年我在和面试官吹嘘我那个校园网络系统的所谓框架,所谓从应用到底层都是自己做的时候,人家一句话就把我问倒了:"你们的网络PHY,用的是哪种MII接口."当时我觉得没答上这个问题没什么,但是工作几年再去回想,当时答不上这个问题,是有多白痴啊~~~~~不要为了一份工作去改变你自己,可能你的确是需要改变,但是,原因千万别是:"这份工作需要我这样啊~~~."一个大学生,一个研究生,寒窗苦读二十几年,就为了一份工作,磨平你棱角?!变得适应这个社会?!拜托,你的梦想呢?你的野望呢?如果你读书这么多年,出来只是想得过且过的混日子,这是何等浪费资源啊!可能你的确是需要一份工作,可能你还要这份工作很体面,但是这些都不是改变你自己的理由,如果一份工作要你改变你的理想,要你放弃你所学,这份工作未必如你想象中适合你.可能有很多不恰当的话,但是这些话如鲠在喉,不吐不快,见谅,最后祝你如愿!


-------------------------answer 9 via  -------------------------


自己寫個平台吧！
