


程序员都是怎么记代码和编程语言的? - 互联网 - 知乎






--------------------Link http://www.zhihu.com/question/26381561 ----------------------





--------------------Detail----------------------

有什么方法快又好记。。。

-------------------------answer 0 via  -------------------------


我们从不自己写代码，我们只是代码的搬运工


-------------------------answer 1 via  -------------------------


这就说明为何程序员都是翻墙高手


-------------------------answer 2 via  -------------------------


C++的String都有什么方法着？ 写个点看IDE会不会自动出来，没出来？FCK，google一下吧~就这样。


-------------------------answer 3 via  -------------------------


你们不用Dash吗？


-------------------------answer 4 via  -------------------------


2015/03/03 更新，必须是Dash。~~~~~~~~~~以下为原回答~~~~~~~~~


-------------------------answer 5 via  -------------------------


跟学自然语言一样啊今天学几个字 明天学几个短语学着学着 卧槽 老子会说话了卧槽 老子能看图说话了卧槽 老子能写短文了卧槽 老子能写作文了卧槽 外语也很简单嘛.......


-------------------------answer 6 via  -------------------------


为什么要记？所有非函数系编程语言，核心无非是与或非三种逻辑、顺序分支循环三种控制结构而已。然后，结构化多了函数定义、调用、返回以及变量作用域之类概念；面向对象多了封装、继承、多态；函数式则玩命玩递归甚或“抵制”变量——除了换汤不换药的些须“口音”式的差异，哪种编程语言有本质差异？既然没有本质差异，用c写个qsort相比用java写，有天大的不同？以上说编程语言；至于代码……代码是为了做事，知道自己要做什么事、如何做这些事、甚至还写出并吃透了设计文档，记什么代码？即便记住了代码，难道不也还是“xx、yy和zz模块用什么方法做XX事”吗？类似的，API大概知道人家的思路（低者如命名思路，高者如设计思路），然后需要用时，猜一下，查一下，简单快捷；算法，真学会了，肯定是掌握了设计思路，以后遇上类似情况，随时随地就能因地制宜自己撸一份出来，又何须记？若没学会，靠死记硬背，边界值之类细枝末节都能保证不出错？出错了，凭死记硬背的半吊子水平，有能力debug？那么记了又有何用。


-------------------------answer 7 via  -------------------------


我有很多物理专业和数学专业的同学，他们通过背代码学习C语言。代码很难记，但是只要花足够的工夫，还是可以记住的。首先在纸上写一遍，然后一遍一遍在电脑中用键盘敲出来。然后过几天快忘记的时候再检查自己是否记住了，再重复。如此往复就能背下代码了。当然记忆力好的那部分人这个过程会轻松很多。对了，顺便一提，他们后来都没有当程序员。


-------------------------answer 8 via  -------------------------


只记粗颗粒的类，模块，代码结构比如类是干什么的，大致有哪些功能。模块是什么模块，大致有那些接口某些对象在整个代码结构里，处于什么位置，谁创建了它，谁能获取它，谁调用了它，谁又销毁了它。数据在各个类和层次，客户端，服务端之间传递过程中发生了什么事情，会触发什么操作。这些内容，很久不会忘记掉。具体的某些框架类，函数，不会特意去记住。稍稍停止写代码的时间长一点，就会完全忘记掉。


-------------------------answer 9 via  -------------------------


你这应该是问的如何记住类库吧，答案是不用记，要用的时候再查文档。剥离开各个语言的标准库，编程语言的实质无非就是数据结构，流程控制结构，和不同的编程范式。
