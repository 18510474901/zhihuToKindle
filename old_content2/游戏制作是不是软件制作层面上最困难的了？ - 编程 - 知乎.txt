


游戏制作是不是软件制作层面上最困难的了？ - 编程 - 知乎






--------------------Link http://www.zhihu.com/question/26636260 ----------------------





--------------------Detail----------------------

我刚大二，所以做的软件不多（几乎没有，，），暑假的时候试着做过一个小手游，觉得里面的玩法及其逻辑都是自己想，没有现有的资料可以参考，如果是更大型一点的游戏呢，甚至说我看见游戏引擎制作的书里面满满的数学公式。其他软件会不会逻辑更加固定化，并且有更多资料可以参考，游戏制作是不是软件层面上最困难的问题呢？-------------------谢谢大家的回答，我看到很多人说要分情况，我想知道如果从事游戏行业是不是也有做难度高的和难度低的区分呢。

-------------------------answer 0 via  -------------------------


在游戏开发中，软件层面是基础，就相当于水，空气。它决定了哪些能做哪些不能做，优秀的引擎相当于为游戏提供了优越的环境，肥沃的土壤。但是并不是所有开发者都能在肥沃的土壤上结出绚丽的果实的，同时也有很多优秀的开发者(这里主要是指非程序人员)在蹩脚的软件层面上开发出史诗级作品的。所以游戏的开发是多方面的，就题主的问题来说:1.如果只是追求做出来一个游戏练手并不追求质量的话，那么软件层面应该是你花时间最多的(原型确定后bug很多呦，游戏开发有一句话，游戏上到一定规模后，bug是永远改不完的)。2.如果楼主追求的是优质的游戏，即画面，玩法，性能，适配都很不错的游戏，那软件层面只是个开始，玩法的调节，人设场景的反复修改，数据分析后数值的反复调整都要耗费很大的精力，到那个时候你会发现软件层面只是一个舞台，如果你是一个优秀的舞者，那灯光，音响等瑕疵都掩盖不住你优秀的技艺。最后，游戏开发是艺术创作，我们都在不断探索。


-------------------------answer 1 via  -------------------------


不是。你完全可以一个人拿个简单的游戏引擎，花个周末，做出款小游戏。当然也可以花个十亿美元，千人团队做个5年再出来卖。游戏的开发复杂和简单程度是基于其设计和底层软硬件支持决定的。抛开可大可小的设计不谈，充分利用已有的工具降低开发的成本是现在的开发者都已经意识到的问题，也是促生各大游戏引擎的重要原因。所以游戏开发不难，难的是两个哲学问题：”是什么（What）？怎么做（How）？“


-------------------------answer 2 via  -------------------------


做游戏和做引擎是两个层面。前者只需要翻引擎的文档知道怎么用就行了，重在构思和写剧本。后者才要研究图形学，了解底层实现，考虑如何封装等等。


-------------------------answer 3 via  -------------------------


谢邀。从技术的角度上来说，游戏技术主要属于计算机科学下图形学的范畴，同时也会牵涉到一些数学、物理学的知识。当然，很多具体的功能游戏引擎都会帮助你实现。如果你是个人开发者或者是小团队，主要的精力肯定还是要放在游戏功能和机制的设计上。这个过程中，技术倒反而不是那么重要的方面，技术和画面很牛逼但游戏性糟糕的大制作我们实在见得太多了。对于绝大多数团队来说，主要的难点在于游戏机制设计上，即你提到的“玩法及其逻辑”，和游戏引擎本身关系不大。这些应该属于业务逻辑，确实没有什么可以参考的现成代码。但是反过来想，其它的软件设计中肯定也会有一些找不到现成答案的问题。比如说如果要你设计一个让用户从银行卡里面支付款项的流程，其中牵涉到的很多问题同样也是需要你站在用户、银行及支付平台三方的角度兼顾考虑的。所以你问的这个问题并没有一个固定的标准可以衡量，就好比设计魔兽世界、支付宝平台还是航天飞机的操控系统哪个更难一样。所谓难易，更多都是建立在自己知识水平上的。天下事有难易乎？为之，则难者亦易矣；不为，则易者亦难矣。人之为学有难易乎？学之，则难者亦易矣；不学，则易者亦难矣。


-------------------------answer 4 via  -------------------------


楼上的两位讲的都不错，但是对游戏与其他软件在制作与学习中的对比讲得不够多，另外也没有针对题主情况进行具体的解答。我虚长题主两岁，现今大四，恰巧几年中游戏，软件和网站相关的项目我都做过，算是有资格来回答这个问题。正式回答之前，先下个结论：对于一个大学生来说，制作一个游戏项目的难度确实大于制作其他软件项目（指具体应用：如网站，APP等，而不是编译器或者操作系统这种）。先说说技术上的问题，其实不管是网站还是游戏，在前端上都面临着一个问题，就是要把结构，行为和样式分离。在技术上其实是非常相似的，就拿Unity3D开发和网页前端来开发进行一下对比吧：Scene编辑器和DOM Tree的对应 - 处理结构Shader和CSS对应 - 处理样式C#脚本和JS脚本对应 - 处理行为既然两种软件的制作技术都如此相似，那么为什么说游戏制作更加困难呢？这仍然要分几个方面讲：大量美术和关卡内容的缺失和企业软件和网页前端不一样的是：如果想做一个还算看得过去的游戏，而不是做Flappy Bird或是俄罗斯方块这种玩具项目，那么你必须拥有一套风格统一而且精美的美术素材，（包括各种3D模型，UI素材等等）另外，就算程序和美术工作完成了，还是要有大量的关卡需要策划去编辑。作为一个软件工程或计算机专业的学生，很多人都不愿意去做 “编辑关卡” 和 “制作美术素材” 这种费时费力又与本专业无关的事情，这几年里， 我看到学院里大多数许多游戏相关的项目都是在这个问题上夭折的。很多项目实际上只实现了一个 "编辑器"，美术和关卡寥寥无几。对于其他软件，如网站来讲，完全不存在这个问题，比如知乎大部分的内容都是由用户自发创造（UGC）的，但是游戏中的数据却要开发人员去生产。大量学习资源的缺失和网站开发不同的是：介绍游戏开发相关的书籍和博客非常少，比如打开博客园 - 开发者的网上家园，观察博客园的首页推荐，你会发现首页20几篇博客里面，没有一篇博客是和游戏开发相关的。这反映了两点现象：1. 游戏开发人员一般不在博客中分享知识。 2.游戏开发人员从业数量较少。另外就是游戏开发氛围的问题，国内仍然没有一个氛围比较好的游戏开发社区，如Web开发者常去的社区：CNode，RubyChina和V2EX等等，再看游戏开发者常去的游戏蛮牛等等。无论从数量还是质量上都输了一筹。（OpenGPU这种我不太愿意把它归结为一个游戏开发相关的论坛）最后，游戏开发的出生时间虽然比网页前端早很多。 但是中国游戏开发方面教育仍然一片空白，这也导致了游戏行业方面无法积累足够有效的学习资源。我校软件学院就是这样：Web开发的课有五门以上，游戏开发的课一门没有。大量中间件的缺失 或者 花费太高超出学生的能力游戏行业大部分中间件（如：动画编辑，碰撞引擎，行为树编辑等等）都是收费或者闭源的，更多的中间件则是公司内部使用，你根本接触不到，比如寒霜引擎和Ubisoft制作雷曼使用的引擎。我们能找到的最好的游戏开源代码，或许只有Quake和Box2d这种老古董了，像havok或是虚幻，CryEngine这种有名的中间件的价格学生是完全无法负担的。很多老兵仍然建议新手从DX或者OpenGL开始构建游戏。游戏开发发展了这么多年，还是没能积累下几个可以用的轮子，想想其实挺逗的。相比之下，网页前端则有大量优质而且免费开源的库可以使用，Jquery，Bootstrap，Anguar.js等等。也是这种开放的心态使得网页前端技术在这几年里发展迅速。中间件的缺失进一步致使游戏开发需要的门槛变高，因为大学生不仅在制作游戏，还在制作各种轮子。这种情况随着U3D等新一代引擎的出现正在改观，但短期内这个问题依然存在。


-------------------------answer 5 via  -------------------------


第一次被邀，受宠若惊。在此分享一下我个人的一些看法。若有问题，还望各位指出。       关于游戏制作，技术确实是一块硬骨头。本人在游戏技术领域道行尚浅，所以关于游戏技术，我只能简单说它是游戏的基石。游戏技术的资料，我想它并不比其他领域少。比如游戏引擎，可以阅读相关书籍（比如《游戏引擎架构》），或下载Github 上的开源引擎 （例如 id-Software/Quake · GitHub ）进行学习。         至于游戏玩法，最简单的学习方式就是去玩相应类型的游戏。一个不喜欢格斗游戏的开发者是无法做出一款打击感强的格斗游戏。之后，你必须开始进行深一步的学习。比如学习游戏AI。          简单一句话，游戏技术很重要，它很难，但相关资料也很多。楼主如果因为觉得游戏技术资料较少，从而得出结论：技术开发是游戏制作最难的部分。这个推理过程是有所偏颇的。       话说回来，游戏技术是否是游戏开发最困难的部分呢？这里我想分享下我当前项目的一些经历，也许能给你新的感受。/************************************************************************************************************************/       当前项目是 IGF2015 的参赛项目，同时也是我们的毕业项目。其重要性不言而喻。从今年上半年开发至今已有近十个月。期间我们遇见的最大困难不是来自于技术，而是来自于游戏设计和团队合作。在次先申明一点，由于游戏属于 thesis game，因此创新性被强调得很重要。       我们的游戏是第一人称恐怖游戏。最初的设计是当敌人被玩家看见时，敌人就会停止不动，直到玩家的视线脱离它们。很熟悉是吧？完全就是SCP173的机制。这个设计为之后的问题埋下了导火索。       最开始团队便有几位成员提出了该设计缺乏新颖性。但是由于大部分团队成员并不熟悉SCP173，甚至很多人根本不怎么玩恐怖游戏。因此他们并没有意识到这个设计存在的隐患。于是我们给团队成员展示了SCP173的视频。但是团队设计人员依旧坚持己见。鉴于中国学生不愿伤和气的传统（其他成员都是美国人和印度人），此事暂时平息。        直到我们在 GDC2014 某学校游戏作品中再次发现了这个机制，并且还发现双方游戏主题都几乎相同。这时，导火索被点燃了。我们无法坐视自己的设计如此毫无新意，我们无法忍受团队设计人员不做好充足的调查研究，并无视其他团队成员的建议。于是，一场战争爆发了。       为了说服团队设计人员，我们尝试过自己开发新的游戏原型，也尝试过和他们私下进行沟通。但鉴于大家表达能力有限，且内心比较急躁，沟通到最后往往无果而终。从我们的角度来说，我们只希望团队正视游戏存在的问题，设计小组肩负起责任来改进游戏的设计。但是设计小组不愿意承认错误，并总认为我们想“篡权”。最坏的时候，整个团队完全四分五裂。某段时间我也曾在团队中打酱油，消极地表达自己的不满。        到最后，老师出来拍板 —— “不改进游戏，就撤销项目”。于是，团队被迫接受意见，并在暑假后开始重新设计。        要说现在团队进展如何，我只能说，不是太乐观但也不是太悲观。随着开发的进行，恐怖游戏的设计难度逐渐被显现出来。设计团队也开始捉襟见肘。但是各个成员开始学会体谅对方，开始学会如何去解决分歧意见，开始学会快速地找寻问题的解决方案而不是夸夸其谈。   “When you talk about making a game, actually it is not about the game, it is about the people who make that game."        “当你提到游戏制作，它更多的是关乎于游戏制作者而不是游戏本身。”这是上学期结束时，我和老师谈及我们的游戏，老师送给我的一句话。        现在，我是该游戏的主设计师。每天除了完成编程本职工作，也在带领团队改进游戏设计，并不断地综合各方意见，化解分歧和争执。        这就是我关于游戏制作的感受。游戏技术仅仅是开始，后面，还有很多困难等着你去解决。


-------------------------answer 6 via  -------------------------


谢 @王选易 邀。首先直接回答题主答案：是的。------------------------更新的分割线-------------------------在楼主的疑惑中，我感觉到楼主是被引擎里面那些玩意吓到了吧。我猜是一堆图形学的东西？（雾）其实游戏开发本来就如同楼主所说的：可以完全靠自己去想。每一部成名作往往都是标志着一种经典的玩法。比如RTS里的星际，MOBA的DOTA。这些逻辑是以往的条条框框所没有的，也不可能出现在之前的书上作为公式。所以游戏并不会因为别人的条条框框去束缚，别人的资料而禁锢。相反的，突破这些公式才能获得在这么多游戏中一鸣惊人的能力。而游戏开发的难度就在于此。但是，这个“此”包含了很多方面。在前段时间，刚好和一堆小伙伴一起共事一个月做出来一款游戏，经历了一个相对来说比较完整的游戏开发流程。里面有不少的地方是值得初学者学习的。首先是初期，游戏需要确定很多元素，比如说核心玩法，游戏风格等等。当你考虑到这点的时候，你会发现，你觉得你想做好一个游戏，但是往往你想不出很奇妙很惊奇的点子。你脑海中浮现出的是别的游戏的影子，你能做的很多时候只是把这些影子具象化，然后去其糟粕取其精华，或者说组合几种元素于一身。然而这样做已经很艰难了，因为你需要你的游戏在核心部分就有其存在的意义。你觉得加上装备强化等级的DOTA还能玩的了吗？你觉得在你的RPG里面加入偷菜是不是很无聊呢？所有的这些，你需要想破脑袋去实现突破，这点我觉得是游戏制作里面用的时间最少，但是很难做的出彩，容易落入平庸的地方。而游戏往往受其核心影响深远，当你确定了这个之后，后面基本上只能比你想象中的要差。当然你要是灵光一闪，想到了一个非常好的点子，比如FEZ（Fez_百度百科）这样的一个奇妙至极的点子，那么恭喜你，你能有一个比较理想的开始。那么接下来你需要和产品美术开发策划等等人员去沟通游戏的具体细节，比如说这个游戏如果是以可操控的角色为主要操作物，那么这个角色到底能做什么？这些怎么去做？什么时候能做？怎么安排能让其变的很有趣味。例如FEZ中，主角初期只能跳，但是当你遇到一些难题后，你将会获得空间能力，这个能力让你在游戏中能解决这些难题，体验解谜的乐趣。又比如，你觉得你的主角在游戏里面应该是一个什么样的背景和性格，那么这个决定的东西需要取决于你的游戏故事背景以及这种背景下合理的性格表现。例如在《剑侠情缘2》里面，主角南宫飞云的背景有整整一个前作作为铺垫，而这那种背景下表现的侠骨柔情在整个游戏过程中被表现的淋漓尽致。这些都只是游戏里面的一点皮毛，当你要开发大作的时候，免不了需要考虑多如牛毛的东西。但是这些东西只有考虑清楚了，才能减少之后带来的损失。比如游戏初期确定的人物有大招设定，但是当你的游戏做着做着发现一个大招按照它的逻辑秒天秒地的时候，你就不得不削掉这个设定，而原本需要大招才能表现的部分就缺失了。那么当你的游戏都设计好了之后，你需要开始进行开发，那么选用什么技术方案比较好呢？这个实际上决定了你后面遇到的坑的多少。比如我见过游戏开发一年因为选用技术方案不行而直接重头再来的。当然技术层面实际上在现在的开发过程中已经没有太大的难度，除非你想拳打显卡危机脚踹男友4，那还是安排大量的程序猿去开发更加强大的引擎吧~！游戏开发往往有一个deadline，这个deadline很多时候是限制游戏的一个重要原因。软件开发具有其他行业不一样的特性：人力时间成本很难预期。而且还有人月神话的特性。而且软件的复杂程度决定了你会不会在最后几天还突然发现一个巨坑。游戏很多情况下会比最开始列出来的那些炫酷的需求少不少元素。就好比当初我们小团队想做一个炫酷掉渣天的解谜+横版动作过关。结果到最后基本就是一个现代版的超级马里奥。这些都是难点。所以很多时候，并不是说代码难写，公式难套。抄一个东西简直就是分分钟。但是游戏想要做的好玩，那真的是从头到尾都是很难的。最后，我觉得关于游戏制作的流程中，这些设计部分也属于软件流程部分。


-------------------------answer 7 via  -------------------------


分情况，如果是用现有的游戏引擎进行开发，那难度也就和使用现成的框架进行网站制作相仿，大概能复杂那么一点点，主要看涉及ai与否，ai的复杂程度。如果要重新从引擎开始写起，我没试过，但是估计不会比os和compiler简单多少。。。


-------------------------answer 8 via  -------------------------


掌握软件是基础也是最终要求。光有想法，没有能力，那怎么去实现呢？ps.创新是建立在继承的基础上，多积累才是硬道理


-------------------------answer 9 via  -------------------------


游戏和技术不是一回事，下面做技术你至少可以按部就班，搞出来的东西中规中矩，就想拍电影，跟着圣经走总能搞出中规中矩的东西，而开发游戏哪来那么一部圣经，跟着谁走都难保你中规中矩，真正的核心方法都窝在公司当商业机密，唯一能看到的东西估计已经是几个世纪前的了。
