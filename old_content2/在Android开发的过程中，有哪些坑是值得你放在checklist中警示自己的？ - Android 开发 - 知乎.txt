


在Android开发的过程中，有哪些坑是值得你放在checklist中警示自己的？ - Android 开发 - 知乎






--------------------Link http://www.zhihu.com/question/27488517 ----------------------





--------------------Detail----------------------

通常我们会将经常遇到的问题、容易犯错的地方都放在一个checklist中，说说在Android开发过程中有哪些问题值得你放在自己的checklist中。举例说明：检查项：是否调用了类的finalize方法作为释放与类相关的资源？可能存在问题：类的finalize方法的调用时机由系统而定，不能准确知道调用时机，可能会导致程序在使用过程中的异常。解决方案：将与类释放资源相关的操作封装成一个共有方法供外部使用，而不是调用类的finalize方法释放与类相关的资源。

-------------------------answer 0 via  -------------------------


1导入的类库需要和项目在同级目录下，谨防资源文件与类库中冲突2textviewsetText为int时候，textview的color代码设置，set/getTextSize 单位问题3json 属性节点不能有空格4asset下使用第三方字体 xx.ttf 必须都为小写5listView自定义adapter中复用holder时候，如果view/checkbox等对应不同状态显示不同的图片，切记情况写全，不然会出现错乱问题。6做上传时候记得问问服务端是否限制了上传文件大小7context/getApplicationContext，视你是否需要涉及到ui时候选择合适的context8存在复用时候，尽量new对象等操作移到复用之外，以防oom9数据库操作加锁10用Activity来显示出的dialog，popupwindow等控件需要在Activity关闭时候（之前也给关了）11toast，判断是否格式（为空等）封装12ui布局在多机型上的测试13new handler时候尽量写在紧跟其他控件的获取之后，防止空指针14context.startActivity();要intent.addFlags(Intent.FLAG_ACTIVITY_NEW_TASK);15针对一些特定的只能为数字的editText 设置软键盘类型为数字，为用户节省切换这一步骤。edittext.setInputType(EditorInfo.TYPE_CLASS_PHONE);16armeabi-v7a17监听键盘输入会有两次：（一次up 一次down）18 不同类型的资源文件最好不要重名，不然会偶尔发现空指针，eclipse会抽，找成另一控件19AlarmManager PendingIntent 这玩意在miui 不管用。。。。20部分系统 datepickdialog 的onDateSet 执行两次21fragment startActivityForResult 回调


-------------------------answer 1 via  -------------------------


谢邀。吃完午饭遛弯回来，购得猪肉脯牛肉干若干，一边吃一边写。TextView（往往 TextView 派生子类同样适用）调用 setText 方法设置一个 int 型的数据，千万要将该值转为 String，否则在某些设备中它会默认去查询 R 文件中定义的资源。使用友盟分享 SDK，需要执行分享的 Activity 请不要为该 Activity 设置android:process
属性。比如你的 App 运行在 com.codingfish.test 进程，需要产生分享动作的Activity 设置 android:proces=":com.codingfish.hello" ，那么新浪微博就会出现你设置的分享内容没有显示的问题。该 Bug 已经提交给友盟的技术人员，但是 N 久没有得到修复。上线之前一定要使用正式签名打包。某朋友公司 Android 的应用上架之前，负责打包上线的童鞋（新人，老人已离职，只有这一个Android）没有签名的概念，直接将 Debug 签名的 Apk 投放到渠道了，到现在还有一批设备没有替换回来。在 Activity 中尽可能少的创建 Handler 对象，创建一个主线程 Handler，一个后台 HandlerThread 就可以了。使用 BitMap 之后，一定要记得释放。使用线程的地方尽量不要 new Thread，而是使用 AsyncThread 。onCreate(Bundle savedInstanceState)
 切记将super.onCreate(savedInstanceState);
 放在一切业务的前面。创建了四大组件一定记得要在 AndroidManifest 文件中声明（当然 BroadcastReceiver 可以动态注册）。===========写着写着就写成了应该注意的事项了，自己汗一个，挖个坑，找个时间再写。=============刚才 Google 了一下，有一篇文章介绍的不错，肥肥做了一次伸手党，直接复制过来了。原文链接： Android生存指南之:开发中的注意事项_Android_脚本之家1. 为Activity声明系统配置变更事件  系统配置变更事件是指转屏，区域语言发生变化，屏幕尺寸发生变化等等，如果Activity没有声明处理这些事件，发生事件时，系统会把Activity杀掉然后重启，并尝试恢复状态，Activity有机会通过onSaveInstanceState()保存一些基本数据到Bundle中，然后此Bundle会在Activity的onCreate()中传递过去。虽然这貌似正常，但是这会引发问题，因为很多其他的东西比如Dialog等是要依赖于具体Activity实例的。所以这种系统默认行为通常都不是我们想要的。为了避免这些系统默认行为，就需要为Activity声明这些配置，如下二个是每个Activity必须声明的：<activity android:configChanges="orientation|keyboardHidden">几乎所有的Activity都要声明如上，为什么Android不把它们变成Default的呢?2. 尽量使用Android的API 这好像是废话，在Android上面开发不用Android API用什么？因为Android几乎支持Java SE所有的API，所以有很多地方Android API与Java SE的API会有重复的地方，比如说对于文件的操作最好使用Android里面Context封装的API，而不要直接使用File对象：Context.openFileOutput(String); // no File file = new File(String)原因就是API里面会考虑到Android平台本身的特性；再如，少用Thread，而多使用AsyncTask等。3. 要考虑到Activity和进程被杀掉的情况  如了通常情况退出Activity外，还有Activity因其他原因被杀的情况，比如系统内存过低，系统配置变更，有异常等等，要考虑和测试这种情况，特别是Activity处理重要的数据时，做好的数据的保存。4. 小心多语言  有些语言真的很啰嗦，中文或英文很简短就能表达的事情到了其他语言就变的死长死长的，所以如果是wrap_content就可能把其他控制挤出可视范围； 如果是指定长度就可能显示不全。也要注意特殊语言比如那些从右向左读的语言。5. 不要用四大组件去实现接口  一是组件的对象都比较大，实现接口比较浪费，而且让代码更不易读和理解； 另外更重要的是导致多方引用，可能会引发内存泄露。6. 用getApplication()来取Context当参数 对于需要使用Context对象作为参数的函数，要使用getApplication()获取Context对象当参数，而不要使用this，除非你需要特定的组件实例！getApplication()返回的Context是属于Application的，它会在整个应用的生命周期内存在，远大于某个组件的生命周期，所以即使某个引用长期持有Context对象也不会引发内存泄露。7. 主线程只做UI控制和Frameworks回调相关的事。附属线程只做费时的后台操作。交互只通过Handler。这样就可以避免大量的线程问题。8. Frameworks的回调不要做太多事情仅做必要的初始化，其他不是很重要的事情可以放到其他线程中去做，或者用Handler Schedule到稍后再做。9. 要考虑多分辨率  至少为hdpi, mdpi, ldpi准备图片和布局。元素的单位也尽可能的使用dip而不要用px。10. 利用Android手机的硬键  几乎所有的Android手机都有BACK和MENU，它们的作用是返回和弹出菜单，所以就不要再在UI中设计返回按扭和菜单按扭。很多优秀的应用如随手记和微信都有返回键，他们之所以有是因为他们都是从iOS上移植过来的，为了保存体验的一致，所以也有了返回和菜单。但这不够Android化，一个纯正的Android是没有必须重复硬键的功能的。


-------------------------answer 2 via  -------------------------


部分经验：1.如果代码需要做混淆，请注意接口类、接口方法和反射要调的类和方法不要混淆，可以照着Activity等四大组件如何不混淆去做2.数据库的版本控制好，并且数据库的周期方法（create、update）不要调用getReadableDatabase或者getWriteableDatabase 方法，因为这些方法会继续调用onCreate方法造成递归调用错误3.通话记录是按手机时间来排序的，所以如果你把时间调到一个很久远的时间（比如2年以后），那你拿到的第一条记录永远是你调到正常时间之前的那个记录4.子线程不要操作ui，包括但不限于各个view组件、dialog、toast等5.R文件不能生成基本都是xml有错误，仔细检查6.高版本（具体忘了）禁用应用通知时（设置里的勾选），toast也无法显示，注意不要乌龙了。类似的还有使用安全软件禁用联网或者某个组件，导致无法监听到事件或者无法联网，也很折磨人7.小米的闹钟会间隔5分钟发出（即本来定于28和29的可能都会在30一起出现），在此周期（5分钟，实验得出的，没有代码支持）定时的闹钟会一起响应。8.service的onstart里的返回值需要注意，如果是默认值（默认值是service被杀系统自动择机启动），在内存紧张的手机上会频繁重启（一秒十几次很正常），而如果你还在里面启动了某些任务，比如联网，会浪费很多流量// 继续更新一些想起来的9.图片资源名称不要以a开头，尤其a+数字，比如avator01等，很多情况下会出现显示不了的情况，大概记得是android自身的资源会使用a开头来命名，遇到了不妨试试改名，不然真会死人。部分实际遇到的状况，限于测试机型不多，可能有误的地方请指出。


-------------------------answer 3 via  -------------------------


       在网上没有搜索到想要的答案，来知乎提问，答案也比较少，索性自问自答一下，盼各位android开发大拿拿出自己积攒的经验，方便初入这行的小伙伴知道该避免那些常见问题、哪些地方容易出错、哪些坑不能踩。。。PS：下面这些CheckList项有些是凭经验所得，没有科学依据，再加上个人能力有限，如果有疑问或者异议请在评论区里面拍砖。


-------------------------answer 4 via  -------------------------


最近遇到一个坑，特别想一吐为快，那就是有的手机遇到这样的一句话时System.out.println(null);会闪退闪退退最可怕的是开发者的手机不闪退，用户的手机闪退。


-------------------------answer 5 via  -------------------------


不要觉得这个Activity里面只有一个网络请求就逻辑混乱的随便写（觉得反正代码很短应该没什么维护成本），老老实实去用MVP架构，等到需求变了之后，功能增多了你就会发现遵循MVP是多么易于维护。


-------------------------answer 6 via  -------------------------


【CardView】1.xml中使用CardView要用全称（当然，你要先导入库），包名是什么我忘了。。好像是V7包2.要加 app:cardPreventCornerOverlap="true"app:cardUseCompatPadding="true"属性，否则AndroidL以上和L以下的版本显示的padding不一致


-------------------------answer 7 via  -------------------------


“冷静，这是15：9的flyme”当你适配某机型的时候说到。


-------------------------answer 8 via  -------------------------


我把一张普通的索引图经过各种无损压缩后转成灰度图，pc上预览没问题，ps显示也没问题，结果编译工具链中appt调用的libpng表示无法识别，然后只能流泪点击revert~~~


-------------------------answer 9 via  -------------------------


setselection（）
